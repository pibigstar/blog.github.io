<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>派大星的博客</title>
  
  <subtitle>很多事情不是会了才能做，而是做了才能学会</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pibigstar.com/"/>
  <updated>2019-09-29T14:56:41.400Z</updated>
  <id>http://pibigstar.com/</id>
  
  <author>
    <name>派大星</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E7%BD%91%E9%A1%B5%E4%B8%ADQQ%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81/"/>
    <id>http://pibigstar.com/2019/09/29/网页中QQ常用代码/</id>
    <published>2019-09-29T14:56:41.400Z</published>
    <updated>2019-09-29T14:56:41.400Z</updated>
    
    <content type="html"><![CDATA[<p>title: 网页中QQ常用代码<br>date: 2019-06-03 22:10:31<br>tags: [QQ,加群链接,打开QQ会话]<br>categories: 工具使用,随笔小记</p><p>@[toc]</p><h2 id="1-点击链接打开会话窗口"><a href="#1-点击链接打开会话窗口" class="headerlink" title="1. 点击链接打开会话窗口"></a>1. 点击链接打开会话窗口</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://wpa.qq.com/msgrd?v=3&amp;uin=741047261&amp;site=qq&amp;menu=yes"</span>&gt;</span>点击与我联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--下面这个也可以实现 --&gt;</span></span><br><span class="line">tencent://message/?Menu=yes&amp;uin=741047261&amp;Service=300&amp;sigT=45a1e5847943b64c6ff3990f8a9e644d2b31356cb0b4ac6b24663a3c8dd0f8aa12a595b1714f9d45</span><br></pre></td></tr></table></figure><h2 id="2-点击链接添加好友"><a href="#2-点击链接添加好友" class="headerlink" title="2. 点击链接添加好友"></a>2. 点击链接添加好友</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"tencent://AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=741047261&amp;website=www.oicqzone.com"</span>&gt;</span>添加好友<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-点击加群"><a href="#3-点击加群" class="headerlink" title="3. 点击加群"></a>3. 点击加群</h2><ol><li>进入 <a href="https://qun.qq.com/join.html" target="_blank" rel="noopener">https://qun.qq.com/join.html</a></li><li>选择哪个群<br><img src="https://img-blog.csdn.net/20180526150938773?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></li><li>复制网页代码即可<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://shang.qq.com/wpa/qunwpa?idkey=875408aae56499d92ddcdda3966fa7c01e1d3b587b038d335917df7d41893170"</span>&gt;</span>点击进群<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="4-手机中网页点击链接打开指定会话窗口"><a href="#4-手机中网页点击链接打开指定会话窗口" class="headerlink" title="4. 手机中网页点击链接打开指定会话窗口"></a>4. 手机中网页点击链接打开指定会话窗口</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mqqwpa://im/chat?chat_type=wpa&amp;uin=5741047261&amp;version=1&amp;src_type=web&amp;web_src=oicqzone.com"</span>&gt;</span>点击联系我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-Android中打开指定QQ会话窗口"><a href="#5-Android中打开指定QQ会话窗口" class="headerlink" title="5. Android中打开指定QQ会话窗口"></a>5. Android中打开指定QQ会话窗口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String url=<span class="string">"mqqwpa://im/chat?chat_type=wpa&amp;uin=741047261"</span>;  </span><br><span class="line">startActivity(<span class="keyword">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(url)));</span><br></pre></td></tr></table></figure><h2 id="6-Android中打开指定应用程序"><a href="#6-Android中打开指定应用程序" class="headerlink" title="6. Android中打开指定应用程序"></a>6. Android中打开指定应用程序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">ComponentName cmp = <span class="keyword">new</span> ComponentName(<span class="string">"com.sina.weibo"</span>,<span class="string">"com.sina.weibo.EditActivity"</span>);</span><br><span class="line">intent.setAction(Intent.ACTION_MAIN);</span><br><span class="line">intent.addCategory(Intent.CATEGORY_LAUNCHER);</span><br><span class="line">intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">intent.setComponent(cmp);</span><br><span class="line">startActivityForResult(intent, <span class="number">0</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">另：几个常用的Package命令：</span></span><br><span class="line"><span class="comment">新浪微博（编辑界面）：com.sina.weibo    com.sina.weibo.EditActivity</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">腾讯微博（编辑界面）：com.tencent.WBlog    com.tencent.WBlog.activity.MicroblogInput</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">微信：   com.tencent.mm           com.tencent.mm.ui.LauncherUI</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">QQ:     com.tencent.mobileqq   com.tencent.mobileqq.activity.HomeActivity</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h2 id="7-获取QQ头像"><a href="#7-获取QQ头像" class="headerlink" title="7. 获取QQ头像"></a>7. 获取QQ头像</h2><ol><li><a href="http://q1.qlogo.cn/g?b=qq&amp;nk=741047261&amp;s=100" target="_blank" rel="noopener">http://q1.qlogo.cn/g?b=qq&amp;nk=741047261&amp;s=100</a></li><li><a href="http://q2.qlogo.cn/headimg_dl?dst_uin=741047261&amp;spec=100" target="_blank" rel="noopener">http://q2.qlogo.cn/headimg_dl?dst_uin=741047261&amp;spec=100</a></li></ol><blockquote><p>nk是你的QQ号，s是尺寸，尺寸对应关系可以看下图</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20190107152859591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 网页中QQ常用代码&lt;br&gt;date: 2019-06-03 22:10:31&lt;br&gt;tags: [QQ,加群链接,打开QQ会话]&lt;br&gt;categories: 工具使用,随笔小记&lt;/p&gt;
&lt;p&gt;@[toc]&lt;/p&gt;
&lt;h2 id=&quot;1-点击链接打开会话窗口&quot;&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E6%B5%85%E8%B0%88Java%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E5%88%92%E5%88%86/"/>
    <id>http://pibigstar.com/2019/09/29/浅谈Java中的内存区域划分/</id>
    <published>2019-09-29T14:56:41.396Z</published>
    <updated>2019-09-29T14:56:41.396Z</updated>
    
    <content type="html"><![CDATA[<p>title: 浅谈Java中的内存区域划分<br>date: 2019-06-11 22:10:31<br>tags: [java,jvm,内存区域]<br>categories: Java</p><h1 id="1-java中内存区域的划分"><a href="#1-java中内存区域的划分" class="headerlink" title="1. java中内存区域的划分"></a>1. java中内存区域的划分</h1><p>上节谈了Java中的垃圾回收机制，今天我们聊聊Java中内存区域的划分。<br>总得来说Java中内存分为四块：栈、堆、数据域、代码域</p><h2 id="1-栈"><a href="#1-栈" class="headerlink" title="1. 栈"></a>1. 栈</h2><blockquote><p>栈中主要存放基本类型的数据和对象的引用也就是存放变量。</p></blockquote><p>Java虚拟机会为每一个方法申请一个栈空间，在这个方法中声明的变量都是放到此栈中的，他们会随此方法的调用结束而回收掉。</p><p>如果存放的是基本类型数据（普通变量非静态变量），则直接将变量名和值存入栈中的内存中；</p><p>如果是引用类型，则将变量名存入栈，然后指向它new出的对象（存放在堆中）。</p><h2 id="2-堆"><a href="#2-堆" class="headerlink" title="2. 堆"></a>2. 堆</h2><blockquote><p>简单来说就是存放通过关键字new创造出来的对象</p></blockquote><h2 id="3-数据域"><a href="#3-数据域" class="headerlink" title="3. 数据域"></a>3. 数据域</h2><p>数据域分为两块：静态域和常量池</p><p>1.静态域</p><blockquote><p>存放被关键字static修饰的变量也就是静态变量<br>如果该静态变量是基本类型则将变量名和值存入静态域，如果是引用类型则指向new出的对象。</p></blockquote><p>2.常量池<br>通俗来讲就是存放那些被final修饰的变量的值</p><blockquote><p>常量池指的是在编译期被确定，并被保存在已编译的.class文件中的一些数据。除了包含代码中所定义的各种基本类型（如int、long等）和对象型（如String及数组）的<code>常量值</code>还包含一些以文本形式出现的符号引用，比如：类和接口的全限定名；字段的名称和描述符；方法和名称和描述符。</p></blockquote><h2 id="4-代码域"><a href="#4-代码域" class="headerlink" title="4. 代码域"></a>4. 代码域</h2><blockquote><p>就是放代码的区域</p></blockquote><h1 id="2-用图来表示"><a href="#2-用图来表示" class="headerlink" title="2. 用图来表示"></a>2. 用图来表示</h1><h4 id="例1-普通变量和静态变量的创建"><a href="#例1-普通变量和静态变量的创建" class="headerlink" title="例1 普通变量和静态变量的创建"></a>例1 普通变量和静态变量的创建</h4><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">"hello"</span>;  </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181123195304578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt><br>这里的str是非静态变量所以将其放入到栈中，而静态变量a则需要放入静态域中，对于变量值”abc”和10则都应该放入到常量池当中</p><h4 id="例2-对象的创建"><a href="#例2-对象的创建" class="headerlink" title="例2 对象的创建"></a>例2 对象的创建</h4><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str=<span class="keyword">new</span> String(<span class="string">"hello"</span>);</span><br></pre></td></tr></table></figure><p>这里的str是String类型的对象，所以放入栈中，而new出来的东西则放入到堆中，对于初始值”hello”则放入到常量池中。<br><img src="https://img-blog.csdnimg.cn/20181123195319214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h4 id="例3-数组的创建"><a href="#例3-数组的创建" class="headerlink" title="例3 数组的创建"></a>例3 数组的创建</h4><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> s[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">s[<span class="number">0</span>]=<span class="number">1</span>;s[<span class="number">1</span>]=<span class="number">2</span>;s[<span class="number">2</span>]=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>这里的s[]是一个数组变量，所以放入到栈中，new出来的东西还是放入到堆中，最后的每个元素的值则放入到常量池当中<br><img src="https://img-blog.csdnimg.cn/20181123195331597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 浅谈Java中的内存区域划分&lt;br&gt;date: 2019-06-11 22:10:31&lt;br&gt;tags: [java,jvm,内存区域]&lt;br&gt;categories: Java&lt;/p&gt;
&lt;h1 id=&quot;1-java中内存区域的划分&quot;&gt;&lt;a href=&quot;#1-j
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/Nsq%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://pibigstar.com/2019/09/29/Nsq搭建与使用/</id>
    <published>2019-09-29T14:56:41.392Z</published>
    <updated>2019-09-29T14:56:41.392Z</updated>
    
    <content type="html"><![CDATA[<p>title: Nsq搭建与使用<br>date: 2019-04-24 22:10:31<br>tags: [nsq,消息队列,go-nsq]<br>categories: go,消息队列</p><h1 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h1><blockquote><p>下载之后解压，并将其bin路径添加到环境变量当中</p></blockquote><p>github地址： <a href="https://github.com/nsqio/nsq/releases" target="_blank" rel="noopener">https://github.com/nsqio/nsq/releases</a></p><p>文档： <a href="https://nsq.io/overview/quick_start.html" target="_blank" rel="noopener">https://nsq.io/overview/quick_start.html</a></p><h1 id="2-使用说明"><a href="#2-使用说明" class="headerlink" title="2. 使用说明"></a>2. 使用说明</h1><h3 id="2-1-启动nsqlookupd"><a href="#2-1-启动nsqlookupd" class="headerlink" title="2.1 启动nsqlookupd"></a>2.1 启动nsqlookupd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsqlookupd</span><br></pre></td></tr></table></figure><blockquote><p>它会监听两个端口： <code>http: 4161</code> 客户端用它来发现和管理。 <code>tcp: 4160</code> nsqd 用它来广播</p></blockquote><p>可选参数：</p><ul><li><code>http-address=&quot;127.0.0.1:4161&quot;</code> : 监听 HTTP 客户端地址</li><li><code>inactive-producer-timeout=5m0s</code>: 从上次 ping 之后，生产者驻留在活跃列表中的时长 </li><li><code>tcp-address=&quot;0.0.0.0:4160&quot;</code>: TCP 客户端监听的地址</li><li><code>broadcast-address</code>: 这个 lookupd 节点的外部地址, (默认主机名) </li><li><code>tombstone-lifetime=45s</code>: 生产者保持 tombstoned 的时长 </li><li><code>verbose=false</code>: 允许输出日志 </li><li><code>version=false</code>: 打印版本信息</li></ul><h3 id="2-2-启动nsqd"><a href="#2-2-启动nsqd" class="headerlink" title="2.2 启动nsqd"></a>2.2 启动nsqd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsqd --lookupd-tcp-address=127.0.0.1:4160</span><br></pre></td></tr></table></figure><blockquote><p>它是一个守护进程，负责接收消息，传递消息给客户端，排队。 会监听两个端口： <code>http: 4151</code>, <code>tcp: 4150</code></p></blockquote><h3 id="3-3-启动nsqadmin"><a href="#3-3-启动nsqadmin" class="headerlink" title="3.3 启动nsqadmin"></a>3.3 启动nsqadmin</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsqadmin --lookupd-http-address=127.0.0.1:4161</span><br></pre></td></tr></table></figure><blockquote><p>它是一个Web页面，负责管理我们的消息队列， 它后面的地址即是我们在 nsqlookupd 里面<code>http-address</code>参数配置的地址，nsqadmin的监听地址为<code>4171</code>，通过<code>127.0.0.1:4171</code>地址可打开NSQ的Web管理页面</p></blockquote><h1 id="3-基本使用"><a href="#3-基本使用" class="headerlink" title="3. 基本使用"></a>3. 基本使用</h1><blockquote><p>Channel是消费者订阅特定Topic的一种抽象。对于发往Topic的消息，nsqd向该Topic下的所有Channel投递消息，而同一个Channel只投递一次，Channel下如果存在多个消费者，则随机选择一个消费者做投递。这种投递方式可以被用作消费者负载均衡。和Topic一样，Channel同样有永久和临时之分，永久的Channel只能通过显式删除销毁，临时的Channel在最后一个消费者断开连接的时候被销毁</p></blockquote><ul><li><code>Topic</code> 就是一个通道，我们可以往这个Topic里面发送消息</li><li><code>Channel</code>起到一个负载均衡的作用，我们可以在一个Topic中建立多个Channel来共同消费这个Topic里面的消息。<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mLmNsb3VkLmdpdGh1Yi5jb20vYXNzZXRzLzE4NzQ0MS8xNzAwNjk2L2YxNDM0ZGM4LTYwMjktMTFlMy04YTY2LTE4Y2E0ZWExMGFjYS5naWY" alt><br><img src="https://img-blog.csdnimg.cn/20190727121930736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt><br>我们建立了一个叫 <code>test-dev</code>的Topic，Channel为<code>default</code></li></ul><p>往通道里面发送消息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d <span class="string">'hello world'</span> <span class="string">'http://127.0.0.1:4151/pub?topic=test-dev'</span></span><br></pre></td></tr></table></figure><p>从通道中消费消息，这里我们要指定从哪个Channel里消费，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsq_to_file --topic=<span class="built_in">test</span>-dev -channel=default --output-dir=<span class="built_in">log</span> --lookupd-http-address=127.0.0.1:4161</span><br></pre></td></tr></table></figure><p>此时就会在当前目前下生成一个 log 文件夹，里面存放的就是我们这个Channel里的消息<br><img src="https://img-blog.csdnimg.cn/20190727124017156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt><br><img src="https://img-blog.csdnimg.cn/20190727124033534.png" alt></p><h1 id="4-封装代码"><a href="#4-封装代码" class="headerlink" title="4. 封装代码"></a>4. 封装代码</h1><p>安装第三方库</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/youzan/<span class="keyword">go</span>-nsq</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> nsq</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"flag"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"sync"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/youzan/go-nsq"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">flag.StringVar(&amp;env,<span class="string">"env"</span>,<span class="string">"dev"</span>,<span class="string">"the nsq environment"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">env <span class="keyword">string</span></span><br><span class="line">pubMu = &amp;sync.RWMutex&#123;&#125;</span><br><span class="line">pubMgrs = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*nsq.TopicProducerMgr)</span><br><span class="line">consumers = &amp;sync.Map&#123;&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Config <span class="keyword">struct</span> &#123;</span><br><span class="line">config *nsq.Config</span><br><span class="line">lookAddr <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> DefaultConfig = <span class="function"><span class="keyword">func</span><span class="params">()</span> *<span class="title">Config</span></span> &#123;</span><br><span class="line">cfg := nsq.NewConfig()</span><br><span class="line"><span class="keyword">return</span> &amp;Config&#123;</span><br><span class="line">config: cfg,</span><br><span class="line">lookAddr: <span class="string">"127.0.0.1:4161"</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getPubMgr</span><span class="params">(topic <span class="keyword">string</span>)</span><span class="params">(*nsq.TopicProducerMgr,error)</span></span>&#123;</span><br><span class="line">pubMu.RLock()</span><br><span class="line"><span class="keyword">if</span> pubMgr,ok := pubMgrs[topic];ok &#123;</span><br><span class="line">pubMu.RUnlock()</span><br><span class="line"><span class="keyword">return</span> pubMgr,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">pubMu.RUnlock()</span><br><span class="line"></span><br><span class="line">pubMu.Lock()</span><br><span class="line"><span class="keyword">defer</span> pubMu.Unlock()</span><br><span class="line"></span><br><span class="line">pubMgr,err := nsq.NewTopicProducerMgr([]<span class="keyword">string</span>&#123;topic&#125;,DefaultConfig.config)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>,err</span><br><span class="line">&#125;</span><br><span class="line">err = pubMgr.ConnectToNSQLookupd(DefaultConfig.lookAddr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>,err</span><br><span class="line">&#125;</span><br><span class="line">pubMgrs[topic] = pubMgr</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> pubMgr,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">wrapTopic</span><span class="params">(topic <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">"%s-%s"</span>,topic,env)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Publish</span><span class="params">(topic <span class="keyword">string</span>, data []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">topic = wrapTopic(topic)</span><br><span class="line">pubMgr, err := getPubMgr(topic)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pubMgr.Publish(topic,data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Consume</span><span class="params">(topic,channel <span class="keyword">string</span>, handlerFunc nsq.HandlerFunc,concurrency <span class="keyword">int</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">topic = wrapTopic(topic)</span><br><span class="line">consumer, err := nsq.NewConsumer(topic, channel, DefaultConfig.config)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">consumer.AddConcurrentHandlers(handlerFunc,concurrency)</span><br><span class="line"><span class="comment">// set the consumer to map for close</span></span><br><span class="line">key := topic+<span class="string">":"</span>+channel</span><br><span class="line">consumers.Store(key,consumer)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> consumer.ConnectToNSQLookupd(DefaultConfig.lookAddr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Close</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 记录关闭过得mgr，每个pubMgr仅可被关闭一次</span></span><br><span class="line">closedPubMgrs := &amp;sync.Map&#123;&#125;</span><br><span class="line">pubMu.RLock()</span><br><span class="line"><span class="keyword">for</span> _,pubMgr := <span class="keyword">range</span> pubMgrs&#123;</span><br><span class="line"><span class="keyword">if</span> _,ok := closedPubMgrs.Load(pubMgr);ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">closedPubMgrs.Store(pubMgr, <span class="keyword">struct</span>&#123;&#125;&#123;&#125;)</span><br><span class="line">pubMgr.Stop()</span><br><span class="line">&#125;</span><br><span class="line">pubMu.RUnlock()</span><br><span class="line"></span><br><span class="line"><span class="comment">// close the consumer</span></span><br><span class="line">consumers.Range(<span class="function"><span class="keyword">func</span><span class="params">(key, value <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> consumer,ok := value.(*nsq.Consumer);ok&#123;</span><br><span class="line">consumer.Stop()</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-consumer.StopChan:</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(time.Second * <span class="number">60</span>):</span><br><span class="line"><span class="comment">//等待一分钟让其关闭handler</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">consumers.Delete(key)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> nsq</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/youzan/go-nsq"</span></span><br><span class="line"><span class="string">"testing"</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestPublish</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">err := Publish(<span class="string">"test"</span>, []<span class="keyword">byte</span>(<span class="string">"Hello Pibigstar"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">t.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">Consume(<span class="string">"test"</span>, <span class="string">"default"</span>, <span class="function"><span class="keyword">func</span><span class="params">(msg *nsq.Message)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">t.Log(<span class="keyword">string</span>(msg.Body))</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-c:</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">close</span>(c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;, <span class="number">5</span>)</span><br><span class="line">&lt;-c</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你不想使用有赞的第三方库，你可以使用下面这个：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/nsqio/<span class="keyword">go</span>-nsq</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/nsqio/go-nsq"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">addr = <span class="string">"127.0.0.1:4150"</span></span><br><span class="line">defaultConfig = nsq.NewConfig()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">Producer(<span class="string">"test-dev"</span>,[]<span class="keyword">byte</span>(<span class="string">"Hello Pibigstar"</span>))</span><br><span class="line">Consumer(<span class="string">"test-dev"</span>,<span class="string">"default"</span>,HandleMessage)</span><br><span class="line">time.Sleep(time.Second * <span class="number">3</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleMessage</span><span class="params">(msg *nsq.Message)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(msg.Body))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// nsq发布消息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Producer</span><span class="params">(topic <span class="keyword">string</span>,data []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// 新建生产者</span></span><br><span class="line">p, err := nsq.NewProducer(addr, defaultConfig)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 发布消息</span></span><br><span class="line"><span class="keyword">return</span> p.Publish(topic, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 消费消息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Consumer</span><span class="params">(topic,channel <span class="keyword">string</span>,handlerFunc nsq.HandlerFunc)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">//新建一个消费者</span></span><br><span class="line">c, err := nsq.NewConsumer(topic, channel, defaultConfig)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加消息处理</span></span><br><span class="line">c.AddHandler(handlerFunc)</span><br><span class="line"><span class="comment">//建立连接</span></span><br><span class="line"><span class="keyword">return</span> c.ConnectToNSQD(addr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: Nsq搭建与使用&lt;br&gt;date: 2019-04-24 22:10:31&lt;br&gt;tags: [nsq,消息队列,go-nsq]&lt;br&gt;categories: go,消息队列&lt;/p&gt;
&lt;h1 id=&quot;1-下载&quot;&gt;&lt;a href=&quot;#1-下载&quot; class=&quot;h
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E4%BD%BF%E7%94%A8GitHub%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%AE%98%E7%BD%91/"/>
    <id>http://pibigstar.com/2019/09/29/使用GitHub创建个人官网/</id>
    <published>2019-09-29T14:56:41.372Z</published>
    <updated>2019-09-29T14:56:41.372Z</updated>
    
    <content type="html"><![CDATA[<p>title: 使用GitHub创建个人官网<br>date: 2019-08-31 22:10:31<br>tags: [github,git]<br>categories: 工具使用</p><h1 id="1-新建项目"><a href="#1-新建项目" class="headerlink" title="1.新建项目"></a>1.新建项目</h1><blockquote><p>项目名称为：你的github用户名.github.io<br>项目名字必须叫这个，比如我的GitHub用户名叫pibigstar<br>那么新建项目为：pibigstar.github.io</p></blockquote><h1 id="2-将网页上传到这个项目即可"><a href="#2-将网页上传到这个项目即可" class="headerlink" title="2. 将网页上传到这个项目即可"></a>2. 将网页上传到这个项目即可</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">"first commit"</span></span><br><span class="line"></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h1 id="3-访问"><a href="#3-访问" class="headerlink" title="3. 访问"></a>3. 访问</h1><p>访问地址为：</p><p><a href="https://pibigstar.github.io" target="_blank" rel="noopener">https://pibigstar.github.io</a></p><p><img src="https://img-blog.csdn.net/20180618161321927?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 使用GitHub创建个人官网&lt;br&gt;date: 2019-08-31 22:10:31&lt;br&gt;tags: [github,git]&lt;br&gt;categories: 工具使用&lt;/p&gt;
&lt;h1 id=&quot;1-新建项目&quot;&gt;&lt;a href=&quot;#1-新建项目&quot; class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0----%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4/"/>
    <id>http://pibigstar.com/2019/09/29/渗透学习----密码爆破/</id>
    <published>2019-09-29T14:56:41.368Z</published>
    <updated>2019-09-29T14:56:41.368Z</updated>
    
    <content type="html"><![CDATA[<p>title: 渗透学习—-密码爆破<br>date: 2019-06-03 22:10:31<br>tags: [kali,渗透]<br>categories: Linux,渗透</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 渗透学习—-密码爆破&lt;br&gt;date: 2019-06-03 22:10:31&lt;br&gt;tags: [kali,渗透]&lt;br&gt;categories: Linux,渗透&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E5%89%8D%E7%AB%AF%E9%9A%8F%E7%AC%94%E8%AE%B0/"/>
    <id>http://pibigstar.com/2019/09/29/前端随笔记/</id>
    <published>2019-09-29T14:56:41.364Z</published>
    <updated>2019-09-29T14:56:41.364Z</updated>
    
    <content type="html"><![CDATA[<p>title: 前端随笔记<br>date: 2019-08-04 22:10:31<br>tags: [前端,bootstrap-select]<br>categories: 前端</p><h2 id="文本输入框提示"><a href="#文本输入框提示" class="headerlink" title="文本输入框提示"></a>文本输入框提示</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">list</span>=<span class="string">"category"</span> <span class="attr">aria-describedby</span>=<span class="string">"basic-addon1"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"category"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"派大星"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"海绵宝宝"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"章鱼哥"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="复选框—搜索提示下拉框"><a href="#复选框—搜索提示下拉框" class="headerlink" title="复选框—搜索提示下拉框"></a>复选框—搜索提示下拉框</h2><p>引入JS：<code>bootstrap-select.js</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectTest"</span> <span class="attr">data-live-search</span>=<span class="string">"true"</span> <span class="attr">title</span>=<span class="string">"请选择"</span> <span class="attr">class</span>=<span class="string">"selectpicker"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">user_id</span>=<span class="string">“1”</span>&gt;</span>小华<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">user_id</span>=<span class="string">“2”</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">user_id</span>=<span class="string">“3”</span>&gt;</span>小心<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">user_id</span>=<span class="string">“4”</span>&gt;</span>天天<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JS中初始</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化</span></span><br><span class="line">$(<span class="string">'.selectpicker'</span>).selectpicker();</span><br><span class="line"><span class="comment">// 选中事件</span></span><br><span class="line">$(<span class="string">'.selectpicker'</span>).on(<span class="string">'changed.bs.select'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   $(<span class="string">'#selectTest'</span>).find(<span class="string">"option:selected"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log($(<span class="keyword">this</span>).attr(<span class="string">'user_id'</span>));</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="built_in">console</span>.log($(<span class="string">'.selectpicker'</span>).selectpicker(<span class="string">'val'</span>))</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>更详细配置请参考文档：<a href="https://developer.snapappointments.com/bootstrap-select/options/" target="_blank" rel="noopener">https://developer.snapappointments.com/bootstrap-select/options/</a></p><h2 id="下拉框列表自定义样式"><a href="#下拉框列表自定义样式" class="headerlink" title="下拉框列表自定义样式"></a>下拉框列表自定义样式</h2><p>将html样式写到data-content中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"selectpicker"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">data-content</span>=<span class="string">"&lt;span class='label label-success'&gt;Relish&lt;/span&gt;"</span>&gt;</span>刷新<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 前端随笔记&lt;br&gt;date: 2019-08-04 22:10:31&lt;br&gt;tags: [前端,bootstrap-select]&lt;br&gt;categories: 前端&lt;/p&gt;
&lt;h2 id=&quot;文本输入框提示&quot;&gt;&lt;a href=&quot;#文本输入框提示&quot; class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/struts2%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://pibigstar.com/2019/09/29/struts2知识点总结/</id>
    <published>2019-09-29T14:56:41.360Z</published>
    <updated>2019-09-29T14:56:41.360Z</updated>
    
    <content type="html"><![CDATA[<p>title: struts2知识点总结<br>date: 2019-04-17 22:10:31<br>tags: [struts2,java,hibernate]<br>categories: 框架学习使用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: struts2知识点总结&lt;br&gt;date: 2019-04-17 22:10:31&lt;br&gt;tags: [struts2,java,hibernate]&lt;br&gt;categories: 框架学习使用&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAMySQL%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84%E9%9B%86%E7%BE%A4/"/>
    <id>http://pibigstar.com/2019/09/29/使用docker搭建MySQL主从架构集群/</id>
    <published>2019-09-29T14:56:41.352Z</published>
    <updated>2019-09-29T14:56:41.352Z</updated>
    
    <content type="html"><![CDATA[<p>title: 使用docker搭建MySQL主从架构集群<br>date: 2019-09-04 22:10:31<br>tags: [mysql,集群]<br>categories: 数据库</p><h2 id="拉取mysql镜像"><a href="#拉取mysql镜像" class="headerlink" title="拉取mysql镜像"></a>拉取mysql镜像</h2><p>这里拉取的是mysql 5.7版本的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure><h2 id="启动两个MySQL容器"><a href="#启动两个MySQL容器" class="headerlink" title="启动两个MySQL容器"></a>启动两个MySQL容器</h2><p>启动两个MySQL容器，一个作为master，一个作为slave</p><p>master节点，将本地的 3307端口映射到容器的3306端口，密码为<code>123456</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3307:3306 --name mysql-master -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br></pre></td></tr></table></figure><p>slave节点，将本地的 3308端口映射到容器的3306端口，密码为<code>123456</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3308:3306 --name mysql-slave -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br></pre></td></tr></table></figure><p>启动完成之后，可通过<code>docker ps</code> 查看是否启动成功。</p><h2 id="登录到mysql中"><a href="#登录到mysql中" class="headerlink" title="登录到mysql中"></a>登录到mysql中</h2><p>登录到<code>master</code>节点中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -h127.0.0.1 -P3307 -p123456</span><br></pre></td></tr></table></figure><p>再启动一个命令窗口，进入到 <code>slave</code>节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -h127.0.0.1 -P3308 -p123456</span><br></pre></td></tr></table></figure><h2 id="配置master"><a href="#配置master" class="headerlink" title="配置master"></a>配置master</h2><p>通过docker exec进入容器内部</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql-master /bin/bash</span><br></pre></td></tr></table></figure><p>修改my.cnf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"[mysqld]\nserver-id=100\nlog-bin=mysql-bin"</span> &gt;&gt; etc/mysql/my.cnf</span><br></pre></td></tr></table></figure><p>其实也就是新增下面两句配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">## 同一局域网内注意要唯一</span><br><span class="line">server-id=100  </span><br><span class="line">## 开启二进制日志功能，可以随便取（关键）</span><br><span class="line">log-bin=mysql-bin</span><br></pre></td></tr></table></figure><p>重启mysql服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>重启时容器会退出，我们需要重新启动一次容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start mysql-master</span><br></pre></td></tr></table></figure><h2 id="配置slave"><a href="#配置slave" class="headerlink" title="配置slave"></a>配置slave</h2><p>和master一样，修改<code>my.cnf</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"[mysqld]\nserver-id=101\nlog-bin=mysql-slave-bin\nrelay_log=edu-mysql-relay-bin"</span> &gt;&gt; etc/mysql/my.cnf</span><br></pre></td></tr></table></figure><p>其实也就在文件中加入下面的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">## 设置server_id,注意要唯一</span><br><span class="line">server-id=101  </span><br><span class="line">## 开启二进制日志功能，以备Slave作为其它Slave的Master时使用</span><br><span class="line">log-bin=mysql-slave-bin   </span><br><span class="line">## relay_log配置中继日志</span><br><span class="line">relay_log=edu-mysql-relay-bin</span><br></pre></td></tr></table></figure><p>然后重启mysql服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>重启过程中，容器会自动退出，我们需要重新启动一次容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start mysql-master</span><br></pre></td></tr></table></figure><p>下一步在Master数据库创建数据同步用户，授予用户<br><code>slave</code> REPLICATION SLAVE权限和REPLICATION CLIENT权限，用于在主从库之间同步数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &apos;slave&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class="line">GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &apos;slave&apos;@&apos;%&apos;;</span><br></pre></td></tr></table></figure><h2 id="将slave链接到master"><a href="#将slave链接到master" class="headerlink" title="将slave链接到master"></a>将slave链接到master</h2><p>先去<code>master</code>中查看下binlog的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -h127.0.0.1 -P3307 -p123456</span><br></pre></td></tr></table></figure><p>查看状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show master status;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190520161612360.png" alt></p><blockquote><p><code>File</code>和<code>Position</code>字段的值后面将会用到，在后面的操作完成之前，需要保证Master库不能做任何操作，否则将会引起状态变化，File和Position字段的值也会变化。</p></blockquote><p>进入到<code>slave</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -h127.0.0.1 -P3308 -p123456</span><br></pre></td></tr></table></figure><p>链接到<code>master</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host=<span class="string">'172.17.0.2'</span>, </span><br><span class="line">master_user=<span class="string">'slave'</span>, </span><br><span class="line">master_password=<span class="string">'123456'</span>, </span><br><span class="line">master_port=3306, </span><br><span class="line">master_log_file=<span class="string">'mysql-bin.000001'</span>, </span><br><span class="line">master_log_pos= 0, </span><br><span class="line">master_connect_retry=30;</span><br></pre></td></tr></table></figure><p><strong>注：</strong></p><ul><li><p><code>master_host</code>  Master的地址，指的是容器的独立ip,可以通过下面命令查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect --format=&apos;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&apos;  mysql-master</span><br></pre></td></tr></table></figure></li><li><p><code>master_port</code> 容器的端口号，指的是容器内部运行mysql的端口号 </p></li><li><p><code>master_user</code> 是我们在master中配置的用户主从复制的用户名</p></li><li><p><code>master_log_file</code> 是上一步中从master中查出File字段的值</p></li><li><p><code>master_log_pos</code> 是复制起始点，如果为0，为从头复制</p></li></ul><h2 id="开启主从复制"><a href="#开启主从复制" class="headerlink" title="开启主从复制"></a>开启主从复制</h2><p>在 slave 中查看主从复制状态，可以看到目前主从复制是还没有开启的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show slave status \G;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190520162621173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><p><strong>开启主从复制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start slave;</span><br></pre></td></tr></table></figure><p>再次查看，我们看到主从复制已经开启了。<br><img src="https://img-blog.csdnimg.cn/20190520163700681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h2 id="测试主从复制"><a href="#测试主从复制" class="headerlink" title="测试主从复制"></a>测试主从复制</h2><p>我们在master中创建一个数据库，看是否在slave中也会创建</p><p>进入到master中的mysql执行创建数据库命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database test default character set utf8;</span><br></pre></td></tr></table></figure><p>然后进入到slave节点中查看是否有该数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190520164102481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt><br>我们看到从库中已经创建了<code>test</code>数据库，至此我们的主从MySQL集群架构已经搭建完毕了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 使用docker搭建MySQL主从架构集群&lt;br&gt;date: 2019-09-04 22:10:31&lt;br&gt;tags: [mysql,集群]&lt;br&gt;categories: 数据库&lt;/p&gt;
&lt;h2 id=&quot;拉取mysql镜像&quot;&gt;&lt;a href=&quot;#拉取mysql
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/Python%E5%86%99%E4%B8%80%E4%B8%AA%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E7%9A%84%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <id>http://pibigstar.com/2019/09/29/Python写一个微信自动回复的机器人/</id>
    <published>2019-09-29T14:56:41.340Z</published>
    <updated>2019-09-29T14:56:41.340Z</updated>
    
    <content type="html"><![CDATA[<p>title: Python写一个微信自动回复的机器人<br>date: 2018-07-09 22:10:31<br>tags: [Python,机器人,微信]<br>categories: pyhton</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: Python写一个微信自动回复的机器人&lt;br&gt;date: 2018-07-09 22:10:31&lt;br&gt;tags: [Python,机器人,微信]&lt;br&gt;categories: pyhton&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89QQ%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8%E4%BB%A5%E5%8F%8A%E5%A5%BD%E5%8F%8B%E4%BF%A1%E6%81%AF/"/>
    <id>http://pibigstar.com/2019/09/29/获取所有QQ好友列表以及好友信息/</id>
    <published>2019-09-29T14:56:41.336Z</published>
    <updated>2019-09-29T14:56:41.336Z</updated>
    
    <content type="html"><![CDATA[<p>title: 获取所有QQ好友列表以及好友信息<br>date: 2018-12-20 22:10:31<br>tags: [QQ好友获取,QQ好友信息]<br>categories: 爬虫相关,Java</p><h2 id="完整源码下载"><a href="#完整源码下载" class="headerlink" title="完整源码下载"></a>完整源码下载</h2><p><a href="https://github.com/pibigstar/QQSpider" target="_blank" rel="noopener">点击下载完整源码</a><br>如果对你有用，请给个Star，你的支持，是我最大的动力</p><h2 id="1-获取所有QQ"><a href="#1-获取所有QQ" class="headerlink" title="1 获取所有QQ"></a>1 获取所有QQ</h2><p>这里主要通过抓包，抓取QQ空间中的数据<br>记得将访问空间权限改为QQ好友<br><img src="https://img-blog.csdn.net/20180625151313548?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt></p><p>接口地址：<br><a href="https://h5.qzone.qq.com/proxy/domain/base.qzone.qq.com/cgi-bin/right/get_entryuinlist.cgi?uin=741047261&amp;fupdate=1&amp;action=1&amp;offset=0&amp;g_tk=847821819&amp;qzonetoken=24dd9cbc92e1ba657addcd982f7f4d0fa1a9ee8ba7b8d52863703a10274f08f9325d1298e5afac11" target="_blank" rel="noopener">https://h5.qzone.qq.com/proxy/domain/base.qzone.qq.com/cgi-bin/right/get_entryuinlist.cgi?uin=741047261&amp;fupdate=1&amp;action=1&amp;offset=0&amp;g_tk=847821819&amp;qzonetoken=24dd9cbc92e1ba657addcd982f7f4d0fa1a9ee8ba7b8d52863703a10274f08f9325d1298e5afac11</a></p><p>这里uin 为你的QQ号<br>offset  偏移量 ，每次增加 50 即可<br>g_tk是从cookie中获取的 p_skey 再通过算法获得；</p><p>java版实现此算法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetTk</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getTk</span><span class="params">(String skey)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> hash = <span class="number">5381</span>;  </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, len = skey.length(); i &lt; len; ++i)&#123;  </span><br><span class="line">hash += (hash &lt;&lt; <span class="number">5</span>) + (<span class="keyword">int</span>)(<span class="keyword">char</span>)skey.charAt(i);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> (hash &amp; <span class="number">0x7fffffff</span>)+<span class="string">""</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整版java实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pibigstar.qq.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pibigstar.qq.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.pibigstar.qq.utils.GetCookies;</span><br><span class="line"><span class="keyword">import</span> com.pibigstar.qq.utils.GetTk;</span><br><span class="line"><span class="keyword">import</span> com.pibigstar.qq.utils.JSONUtil;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取所有的QQ用户列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> pibigstar</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetAllUser</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;User&gt; <span class="title">getAll</span><span class="params">(Map&lt;String, String&gt; cookies)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">List&lt;User&gt; allUser = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">String qq = cookies.get(<span class="string">"o_cookie"</span>);</span><br><span class="line">String pskey = cookies.get(<span class="string">"p_skey"</span>);</span><br><span class="line"></span><br><span class="line">String g_tk = GetTk.getTk(pskey);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;;) &#123;</span><br><span class="line">Document document = Jsoup.connect(<span class="string">"https://h5.qzone.qq.com/proxy/domain/base.qzone.qq.com/cgi-bin/right/get_entryuinlist.cgi?uin=741047261&amp;fupdate=1&amp;action=1&amp;offset="</span>+i+<span class="string">"&amp;g_tk="</span>+g_tk).cookies(cookies).header(<span class="string">"user-agent"</span>, <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36"</span>).timeout(<span class="number">10000</span>).ignoreContentType(<span class="keyword">true</span>).get();</span><br><span class="line">String strJson = document.getElementsByTag(<span class="string">"body"</span>).text().replace(<span class="string">"_Callback("</span>, <span class="string">""</span>).replace(<span class="string">");"</span>, <span class="string">""</span>);</span><br><span class="line">JSONObject jsonObject = <span class="keyword">new</span> JSONObject(strJson);</span><br><span class="line">String jsonData =((JSONObject) jsonObject.get(<span class="string">"data"</span>)).get(<span class="string">"uinlist"</span>).toString();</span><br><span class="line">List&lt;User&gt; users = JSONUtil.JSONToList(jsonData, User.class);</span><br><span class="line"><span class="keyword">if</span> (users==<span class="keyword">null</span>||users.size()==<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">allUser.addAll(users);</span><br><span class="line">i+=<span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> allUser;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-获得QQ信息"><a href="#2-获得QQ信息" class="headerlink" title="2 获得QQ信息"></a>2 获得QQ信息</h2><p>接口地址：<br><a href="http://cgi.find.qq.com/qqfind/buddy/search_v3" target="_blank" rel="noopener">http://cgi.find.qq.com/qqfind/buddy/search_v3</a>  </p><p>post请求，需要两个参数：<br>keyword ： 你要查询的QQ号码<br>lwd : g_tk 值</p><p>注意：此g_tk 的值为 cookie中 skey 计算得来的 而不是 p_skey </p><p>java实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pibigstar.qq.main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONArray;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pibigstar.qq.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.pibigstar.qq.utils.GetTk;</span><br><span class="line"><span class="keyword">import</span> com.pibigstar.qq.utils.JSONUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetInfo</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> User <span class="title">getInfo</span><span class="params">(String qq,Map&lt;String, String&gt; cookies)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">//注意这里，获得信息是用的skey 而获得全部好友使用的为p_skey</span></span><br><span class="line">String skey = cookies.get(<span class="string">"skey"</span>);</span><br><span class="line">String g_tk = GetTk.getTk(skey);</span><br><span class="line"></span><br><span class="line">data.put(<span class="string">"keyword"</span>, qq);</span><br><span class="line">data.put(<span class="string">"ldw"</span>, g_tk);</span><br><span class="line"></span><br><span class="line">Document document;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">document = Jsoup.connect(<span class="string">"http://cgi.find.qq.com/qqfind/buddy/search_v3"</span>).cookies(cookies).header(<span class="string">"user-agent"</span>, <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36"</span>).ignoreContentType(<span class="keyword">true</span>).data(data).timeout(<span class="number">10000</span>).post();</span><br><span class="line">String allJson = document.getElementsByTag(<span class="string">"body"</span>).text();</span><br><span class="line">System.out.println(allJson);</span><br><span class="line">JSONObject result = (JSONObject) <span class="keyword">new</span> JSONObject(allJson).get(<span class="string">"result"</span>);</span><br><span class="line">JSONObject buddy = (JSONObject) result.get(<span class="string">"buddy"</span>);</span><br><span class="line">JSONArray jsonArray = buddy.getJSONArray(<span class="string">"info_list"</span>);</span><br><span class="line"></span><br><span class="line">JSONObject dataJson = (JSONObject) jsonArray.get(<span class="number">0</span>);</span><br><span class="line">user = JSONUtil.jSONToObject(dataJson.toString(), User.class);</span><br><span class="line">JSONObject birthdayJson = (JSONObject) dataJson.get(<span class="string">"birthday"</span>);</span><br><span class="line">String year = birthdayJson.get(<span class="string">"year"</span>).toString();</span><br><span class="line">String month = birthdayJson.get(<span class="string">"month"</span>).toString();</span><br><span class="line">String day = birthdayJson.get(<span class="string">"day"</span>).toString();</span><br><span class="line">String birthday = year+<span class="string">"-"</span>+month+<span class="string">"-"</span>+day;</span><br><span class="line">user.setBirthday(birthday);</span><br><span class="line"></span><br><span class="line">Calendar calendar = Calendar.getInstance();</span><br><span class="line"><span class="keyword">int</span> now = calendar.get(Calendar.YEAR);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (year!=<span class="keyword">null</span>&amp;&amp;year.length()&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> age = now - Integer.parseInt(year);</span><br><span class="line">user.setAge(age);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>把user的bean也放一下</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pibigstar.qq.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String data;<span class="comment">//QQ号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String label;<span class="comment">//用户名/备注名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String nick;<span class="comment">//昵称</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String gender;<span class="comment">//性别 1为男  2为女</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String city;<span class="comment">//城市</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String country;<span class="comment">//国家</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String lnick;<span class="comment">//个性签名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String personal;<span class="comment">//个人说明</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String college;<span class="comment">//学校</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String birthday;<span class="comment">//生日</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String email;<span class="comment">//邮箱</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String phone;<span class="comment">//手机</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String uin;<span class="comment">//qq号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUin</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> uin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUin</span><span class="params">(String uin)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.uin = uin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLabel</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> label;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLabel</span><span class="params">(String label)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.label = label;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getNick</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> nick;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNick</span><span class="params">(String nick)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.nick = nick;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> gender;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(String gender)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.gender = gender;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCity</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> city;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCity</span><span class="params">(String city)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.city = city;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCountry</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> country;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCountry</span><span class="params">(String country)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.country = country;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getLnick</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> lnick;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLnick</span><span class="params">(String lnick)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.lnick = lnick;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPersonal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> personal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPersonal</span><span class="params">(String personal)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.personal = personal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCollege</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> college;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCollege</span><span class="params">(String college)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.college = college;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> birthday;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(String birthday)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.email = email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPhone</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> phone;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhone</span><span class="params">(String phone)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.phone = phone;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"User [data="</span> + data + <span class="string">", label="</span> + label + <span class="string">", nick="</span> + nick + <span class="string">", gender="</span> + gender + <span class="string">", city="</span> + city</span><br><span class="line">+ <span class="string">", country="</span> + country + <span class="string">", lnick="</span> + lnick + <span class="string">", personal="</span> + personal + <span class="string">", college="</span> + college</span><br><span class="line">+ <span class="string">", birthday="</span> + birthday + <span class="string">", email="</span> + email + <span class="string">", phone="</span> + phone + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 获取所有QQ好友列表以及好友信息&lt;br&gt;date: 2018-12-20 22:10:31&lt;br&gt;tags: [QQ好友获取,QQ好友信息]&lt;br&gt;categories: 爬虫相关,Java&lt;/p&gt;
&lt;h2 id=&quot;完整源码下载&quot;&gt;&lt;a href=&quot;#完整源码
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/golang%E5%AF%B9%E6%8E%A5%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98/"/>
    <id>http://pibigstar.com/2019/09/29/golang对接支付宝支付/</id>
    <published>2019-09-29T14:56:41.332Z</published>
    <updated>2019-09-29T14:56:41.332Z</updated>
    
    <content type="html"><![CDATA[<p>title: golang对接支付宝支付<br>date: 2018-07-22 22:10:31<br>tags: [支付宝,golang,打开浏览器]<br>categories: go</p><p>本文采用沙箱环境</p><h1 id="1-开启沙箱"><a href="#1-开启沙箱" class="headerlink" title="1. 开启沙箱"></a>1. 开启沙箱</h1><p>文档：<a href="https://docs.open.alipay.com/200/105311/" target="_blank" rel="noopener">https://docs.open.alipay.com/200/105311/</a><br>沙箱地址：<a href="https://openhome.alipay.com/platform/appDaily.htm" target="_blank" rel="noopener">https://openhome.alipay.com/platform/appDaily.htm</a></p><h1 id="2-生成应用公钥和秘钥（已弃用）"><a href="#2-生成应用公钥和秘钥（已弃用）" class="headerlink" title="2. 生成应用公钥和秘钥（已弃用）"></a>2. 生成应用公钥和秘钥（已弃用）</h1><blockquote><p>本文中的签名方法默认为 RSA2，采用支付宝提供的 RSA签名&amp;验签工具 生成秘钥时，秘钥的格式必须为 PKCS1，秘钥长度推荐 2048。所以在支付宝管理后台请注意配置 RSA2(SHA256)密钥。<br>生成秘钥对之后，将公钥提供给支付宝（通过支付宝后台上传）对我们请求的数据进行签名验证，我们的代码中将使用私钥对请求数据签名。</p></blockquote><p>RSA签名和验证工具下载：<a href="https://docs.open.alipay.com/291/105971" target="_blank" rel="noopener">https://docs.open.alipay.com/291/105971</a></p><ol><li>下载之后解压</li><li>双击<code>RSA签名验签工具.bat</code></li><li>秘钥格式选择<code>PKCS1</code></li><li>点击生成秘钥</li><li>复制公钥</li><li>回到沙箱中，点击查看应用公钥，然后点击修改<br><img src="https://img-blog.csdnimg.cn/201907201240149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></li><li>保存好私钥，我们一会需要在代码中用到</li><li>复制支付宝公钥，代码中验证需要用到<br><img src="https://img-blog.csdnimg.cn/20190720133503423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></li><li>配置支付成功后的回调地址（这必须是个公网地址）<br><img src="https://img-blog.csdnimg.cn/20190727161229344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt><h1 id="3-证书认证"><a href="#3-证书认证" class="headerlink" title="3. 证书认证"></a>3. 证书认证</h1><blockquote><p>目前新创建的支付宝应用只支持证书方式认证，已经弃用之前的公钥和私钥的方式</p></blockquote></li></ol><p><strong>公钥秘钥说明</strong></p><blockquote><p>我们生成秘钥对之后，将公钥提供给支付宝（通过支付宝后台上传）对我们请求的数据进行签名验证，我们的代码中使用私钥对请求数据签名。</p></blockquote><ul><li>证书签名请求文件（用来提交给支付宝后台生成证书的）</li><li>应用私钥（调用支付宝接口的时候，我们需要使用该私钥对参数进行签名）</li><li>支付宝公钥证书（用来验证我们的签名的，现在已经被支付宝公钥证书取代）</li></ul><h2 id="3-1-下载生成工具"><a href="#3-1-下载生成工具" class="headerlink" title="3.1 下载生成工具"></a>3.1 下载生成工具</h2><p>下载地址与文档：<a href="https://docs.open.alipay.com/291/105971" target="_blank" rel="noopener">https://docs.open.alipay.com/291/105971</a><br><img src="https://img-blog.csdnimg.cn/20190920212402568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h2 id="3-2-生成csr证书签名请求文件"><a href="#3-2-生成csr证书签名请求文件" class="headerlink" title="3.2 生成csr证书签名请求文件"></a>3.2 生成csr证书签名请求文件</h2><p>工具安装好之后打开，点击获取<br><img src="https://img-blog.csdnimg.cn/20190920212856648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h2 id="3-3-输入信息"><a href="#3-3-输入信息" class="headerlink" title="3.3 输入信息"></a>3.3 输入信息</h2><blockquote><p>主要是组织/公司这块一定要写的和你支付宝中应用的名一样，不然不会通过的，填写完毕之后点击<code>生成CSR文件</code> ，点击页面的打开文件位置，就可以看到三个文件了，分别是<code>证书签名请求文件</code>，<code>应用公钥</code>，<code>应用私钥</code></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20190920212925809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h2 id="3-4-上传CSR证书签名请求文件"><a href="#3-4-上传CSR证书签名请求文件" class="headerlink" title="3.4 上传CSR证书签名请求文件"></a>3.4 上传CSR证书签名请求文件</h2><blockquote><p>回到支付宝后台，点击 <code>接口加签方式</code> 设置，选择公钥证书，点击上次CSR生成证书，把我们刚才生成的那个证书(<code>.csr</code>)上传进去</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20190920213258422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h2 id="3-5-下载证书"><a href="#3-5-下载证书" class="headerlink" title="3.5 下载证书"></a>3.5 下载证书</h2><p>上传好之后，会弹出让你下载证书的页面，把那三个证书都下载下来，分别是: 应用公钥证书，支付宝公钥证书，支付宝根证书<br><img src="https://img-blog.csdnimg.cn/20190920213958158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><p>下载第三方库<br><code>go get github.com/smartwalle/alipay/v3</code></p><h3 id="1-网页扫码支付"><a href="#1-网页扫码支付" class="headerlink" title="1. 网页扫码支付"></a>1. 网页扫码支付</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/smartwalle/alipay"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"os/exec"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line"><span class="comment">// appId</span></span><br><span class="line">appId = <span class="string">""</span></span><br><span class="line"><span class="comment">// 应用公钥</span></span><br><span class="line">aliPublicKey = <span class="string">""</span></span><br><span class="line"><span class="comment">// 应用私钥</span></span><br><span class="line">privateKey = <span class="string">""</span></span><br><span class="line">client, _ = alipay.New(appId, aliPublicKey, privateKey, <span class="literal">false</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">client.LoadAppPublicCert(<span class="string">"应用公钥证书"</span>)</span><br><span class="line">client.LoadAliPayPublicCert(<span class="string">"支付宝公钥证书"</span>)</span><br><span class="line">client.LoadAliPayRootCert(<span class="string">"支付宝根证书"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//网站扫码支付</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WebPageAlipay</span><span class="params">()</span></span> &#123;</span><br><span class="line">pay := alipay.AliPayTradePagePay&#123;&#125;</span><br><span class="line"><span class="comment">// 支付宝回调地址（需要在支付宝后台配置）</span></span><br><span class="line"><span class="comment">// 支付成功后，支付宝会发送一个POST消息到该地址</span></span><br><span class="line">pay.NotifyURL = <span class="string">"http://www.pibigstar/alipay"</span></span><br><span class="line"><span class="comment">// 支付成功之后，浏览器将会重定向到该 URL</span></span><br><span class="line">pay.ReturnURL = <span class="string">"http://localhost:8088/return"</span></span><br><span class="line"><span class="comment">//支付标题</span></span><br><span class="line">pay.Subject = <span class="string">"支付宝支付测试"</span></span><br><span class="line"><span class="comment">//订单号，一个订单号只能支付一次</span></span><br><span class="line">pay.OutTradeNo = time.Now().String()</span><br><span class="line"><span class="comment">//销售产品码，与支付宝签约的产品码名称,目前仅支持FAST_INSTANT_TRADE_PAY</span></span><br><span class="line">pay.ProductCode = <span class="string">"FAST_INSTANT_TRADE_PAY"</span></span><br><span class="line"><span class="comment">//金额</span></span><br><span class="line">pay.TotalAmount = <span class="string">"0.01"</span></span><br><span class="line"></span><br><span class="line">url, err := client.TradePagePay(pay)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">payURL := url.String()</span><br><span class="line"><span class="comment">//这个 payURL 即是用于支付的 URL，可将输出的内容复制，到浏览器中访问该 URL 即可打开支付页面。</span></span><br><span class="line">fmt.Println(payURL)</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开默认浏览器</span></span><br><span class="line">payURL = strings.Replace(payURL,<span class="string">"&amp;"</span>,<span class="string">"^&amp;"</span>,<span class="number">-1</span>)</span><br><span class="line">exec.Command(<span class="string">"cmd"</span>, <span class="string">"/c"</span>, <span class="string">"start"</span>,payURL).Start()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//手机客户端支付</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WapAlipay</span><span class="params">()</span></span> &#123;</span><br><span class="line">pay := alipay.AliPayTradeWapPay&#123;&#125;</span><br><span class="line"><span class="comment">// 支付成功之后，支付宝将会重定向到该 URL</span></span><br><span class="line">pay.ReturnURL = <span class="string">"http://localhost:8088/return"</span></span><br><span class="line"><span class="comment">//支付标题</span></span><br><span class="line">pay.Subject = <span class="string">"支付宝支付测试"</span></span><br><span class="line"><span class="comment">//订单号，一个订单号只能支付一次</span></span><br><span class="line">pay.OutTradeNo = time.Now().String()</span><br><span class="line"><span class="comment">//商品code</span></span><br><span class="line">pay.ProductCode = time.Now().String()</span><br><span class="line"><span class="comment">//金额</span></span><br><span class="line">pay.TotalAmount = <span class="string">"0.01"</span></span><br><span class="line"></span><br><span class="line">url, err := client.TradeWapPay(pay)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">payURL := url.String()</span><br><span class="line"><span class="comment">//这个 payURL 即是用于支付的 URL，可将输出的内容复制，到浏览器中访问该 URL 即可打开支付页面。</span></span><br><span class="line">fmt.Println(payURL)</span><br><span class="line"><span class="comment">//打开默认浏览器</span></span><br><span class="line">payURL = strings.Replace(payURL,<span class="string">"&amp;"</span>,<span class="string">"^&amp;"</span>,<span class="number">-1</span>)</span><br><span class="line">exec.Command(<span class="string">"cmd"</span>, <span class="string">"/c"</span>, <span class="string">"start"</span>,payURL).Start()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//生成支付URL</span></span><br><span class="line">WapAlipay()</span><br><span class="line"><span class="comment">//支付成功之后的返回URL页面</span></span><br><span class="line">http.HandleFunc(<span class="string">"/return"</span>, <span class="function"><span class="keyword">func</span><span class="params">(rep http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">req.ParseForm()</span><br><span class="line">ok, err := client.VerifySign(req.Form)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &amp;&amp; ok &#123;</span><br><span class="line">rep.Write([]<span class="keyword">byte</span>(<span class="string">"支付成功"</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//支付成功之后的通知页面</span></span><br><span class="line">http.HandleFunc(<span class="string">"/alipay"</span>, <span class="function"><span class="keyword">func</span><span class="params">(rep http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> noti, _ = client.GetTradeNotification(req)</span><br><span class="line"><span class="keyword">if</span> noti != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"支付成功"</span>)</span><br><span class="line"><span class="comment">//修改订单状态。。。。</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"支付失败"</span>)</span><br><span class="line">&#125;</span><br><span class="line">alipay.AckNotification(rep) <span class="comment">// 确认收到通知消息</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"server start...."</span>)</span><br><span class="line">http.ListenAndServe(<span class="string">":8088"</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: golang对接支付宝支付&lt;br&gt;date: 2018-07-22 22:10:31&lt;br&gt;tags: [支付宝,golang,打开浏览器]&lt;br&gt;categories: go&lt;/p&gt;
&lt;p&gt;本文采用沙箱环境&lt;/p&gt;
&lt;h1 id=&quot;1-开启沙箱&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E4%BD%BF%E7%94%A8HttpClient%E8%8E%B7%E5%BE%97%E7%BD%91%E9%A1%B5%E5%86%85%E5%AE%B9/"/>
    <id>http://pibigstar.com/2019/09/29/使用HttpClient获得网页内容/</id>
    <published>2019-09-29T14:56:41.324Z</published>
    <updated>2019-09-29T14:56:41.324Z</updated>
    
    <content type="html"><![CDATA[<p>title: 使用HttpClient获得网页内容<br>date: 2019-03-12 22:10:31<br>tags: [httpclient,java]<br>categories: 爬虫相关</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 使用HttpClient获得网页内容&lt;br&gt;date: 2019-03-12 22:10:31&lt;br&gt;tags: [httpclient,java]&lt;br&gt;categories: 爬虫相关&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/Java%E4%BD%BF%E7%94%A8Jwt%E5%8A%A0%E5%AF%86%E4%BF%A1%E6%81%AF%E7%94%9F%E6%88%90token/"/>
    <id>http://pibigstar.com/2019/09/29/Java使用Jwt加密信息生成token/</id>
    <published>2019-09-29T14:56:41.300Z</published>
    <updated>2019-09-29T14:56:41.300Z</updated>
    
    <content type="html"><![CDATA[<p>title: Java使用Jwt加密信息生成token<br>date: 2019-04-17 22:10:31<br>tags: [jwt,token]<br>categories: Java,java工具类,SpringBoot技能大全</p><h1 id="1-添加依赖"><a href="#1-添加依赖" class="headerlink" title="1. 添加依赖"></a>1. 添加依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- jwt加密工具类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="2-java代码"><a href="#2-java代码" class="headerlink" title="2. java代码"></a>2. java代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.jsonwebtoken.*;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> javax.xml.bind.DatatypeConverter;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> pibigstar</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2018-12-13 15:32</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> token工具类</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SECRET = <span class="string">"rgsnsm#ldyh*ws%l&amp;hdpmnmw@xyhndes"</span>;<span class="comment">//私密key</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Long TTL_EXPIRATION = <span class="number">1000L</span> * <span class="number">60</span> * <span class="number">30</span>; <span class="comment">//过期时间30分钟</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ISSUER = <span class="string">"pibigstar"</span>;<span class="comment">//发行人</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密信息，生成token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">creatToken</span><span class="params">(Map&lt;String,Object&gt; params)</span> </span>&#123;</span><br><span class="line">        SignatureAlgorithm signature = SignatureAlgorithm.HS256;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] secretBytes = DatatypeConverter.parseBase64Binary(SECRET);</span><br><span class="line">        Key secretKey = <span class="keyword">new</span> SecretKeySpec(secretBytes, signature.getJcaName());</span><br><span class="line">        Long expiration = System.currentTimeMillis() + TTL_EXPIRATION;</span><br><span class="line"></span><br><span class="line">        JwtBuilder builder = Jwts.builder()</span><br><span class="line">                .setIssuedAt(<span class="keyword">new</span> Date())</span><br><span class="line">                .setExpiration(<span class="keyword">new</span> Date(expiration))</span><br><span class="line">                .setIssuer(ISSUER)</span><br><span class="line">                .setClaims(params)</span><br><span class="line">                .signWith(signature,secretKey);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> builder.compact();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">parseToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        Claims claims = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            claims = Jwts.parser().setSigningKey(DatatypeConverter.parseBase64Binary(SECRET))</span><br><span class="line">                    .parseClaimsJws(token).getBody();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SignatureException | MalformedJwtException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">"token解析失败"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExpiredJwtException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"token已过期"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> claims;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"pibigstar"</span>,<span class="string">"测试"</span>);</span><br><span class="line">    String token = creatToken(map);</span><br><span class="line">    System.out.println(<span class="string">"token:"</span> + token);</span><br><span class="line">    Map&lt;String, Object&gt; result = parseToken(token);</span><br><span class="line">    System.out.println(result.get(<span class="string">"pibigstar"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: Java使用Jwt加密信息生成token&lt;br&gt;date: 2019-04-17 22:10:31&lt;br&gt;tags: [jwt,token]&lt;br&gt;categories: Java,java工具类,SpringBoot技能大全&lt;/p&gt;
&lt;h1 id=&quot;1-添加
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E4%BF%AE%E6%94%B9Java%E5%AD%97%E8%8A%82%E7%A0%81/"/>
    <id>http://pibigstar.com/2019/09/29/修改Java字节码/</id>
    <published>2019-09-29T14:56:41.300Z</published>
    <updated>2019-09-29T14:56:41.300Z</updated>
    
    <content type="html"><![CDATA[<p>title: 修改Java字节码<br>date: 2019-01-21 22:10:31<br>tags: [java,jvm,asmtools]<br>categories: Java,JVM</p><h2 id="下载工具asmtools"><a href="#下载工具asmtools" class="headerlink" title="下载工具asmtools"></a>下载工具asmtools</h2><p>下载链接：<a href="https://pan.baidu.com/s/1iNHJKK9Ndsag_gqi2PYAkQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1iNHJKK9Ndsag_gqi2PYAkQ</a><br>提取码：72ke </p><h2 id="操作字节"><a href="#操作字节" class="headerlink" title="操作字节"></a>操作字节</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Foo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">  System.out.println(<span class="string">"Hello, Java!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (flag == <span class="keyword">true</span>) &#123;</span><br><span class="line">  System.out.println(<span class="string">"Hello, JVM!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们编译后直接运行会打印出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello, Java!</span><br><span class="line">Hello, JVM!</span><br></pre></td></tr></table></figure><p>我们知道，boolean类型在虚拟机是以int方式进行存储的，0是false，1是true，可当我们通过修改字节码的方式，让<code>flag</code>等于2 会发生什么，跟着我下面的步骤一起来看看吧</p><ol><li><p>先编译Foo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac Foo.java</span><br></pre></td></tr></table></figure></li><li><p>通过字节码工具反编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar asmtools.jar jdis Foo.class &gt; Foo.jasm.1</span><br></pre></td></tr></table></figure></li><li><p>修改flag的字节码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'NR==1, /iconst_1/&#123;sub(/iconst_1/,"iconst_2")&#125; 1'</span> Foo.jasm.1 &gt; Foo.jasm</span><br></pre></td></tr></table></figure></li><li><p>将jasm反编译的再次编译为class文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar asmtools.jar jasm Foo.jasm</span><br></pre></td></tr></table></figure></li><li><p>运行Foo.class</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java Foo</span><br></pre></td></tr></table></figure></li></ol><p>我们会发现只打印出了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello, Java!</span><br></pre></td></tr></table></figure><p>我们发现 第二个if不成立了，第一个还是成立，这是因为当我们直接进行 if(flag) 是按java虚拟机的翻译就是 当flag不等于0时则成立 而 if(flag==true) 则被虚拟机认为 当flag等于1是才成立，而我们将flag改为了2，这时第一个还是不等于0，所以成立，而第一个判断语句而不等于1了所以条件不成立。</p><p>PS: 当我们把flag改为3呢，第二个条件会成立吗？<br>答案是：会成立，很有意思是吧，这是因为java虚拟机在内部是截取的最低位来判断的，2转换为2进制为 <code>0010</code> 截取最低位就是 0，而 3 转为 二进制为<code>0001</code>，最低位为1 </p><p>另外，<code>awk</code>命令详细文档：<a href="https://blog.csdn.net/jiaobuchong/article/details/83037467" target="_blank" rel="noopener">https://blog.csdn.net/jiaobuchong/article/details/83037467</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 修改Java字节码&lt;br&gt;date: 2019-01-21 22:10:31&lt;br&gt;tags: [java,jvm,asmtools]&lt;br&gt;categories: Java,JVM&lt;/p&gt;
&lt;h2 id=&quot;下载工具asmtools&quot;&gt;&lt;a href=&quot;#下载
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/GoLand%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%85%8D%E7%BD%AE/"/>
    <id>http://pibigstar.com/2019/09/29/GoLand文件格式化配置/</id>
    <published>2019-09-29T14:56:41.280Z</published>
    <updated>2019-09-29T14:56:41.280Z</updated>
    
    <content type="html"><![CDATA[<p>title: GoLand文件格式化配置<br>date: 2019-05-28 22:10:31<br>tags: [proto,goformat,gofmt,clang-format,golang-ci]<br>categories: go</p><p>@[toc]</p><h1 id="1-Go-fmt配置"><a href="#1-Go-fmt配置" class="headerlink" title="1. Go fmt配置"></a>1. Go fmt配置</h1><p><img src="https://img-blog.csdnimg.cn/20190705101326175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt><br>Arguments: <code>-w $FilePath$</code></p><h1 id="2-golangci-lint静态代码检查"><a href="#2-golangci-lint静态代码检查" class="headerlink" title="2. golangci-lint静态代码检查"></a>2. golangci-lint静态代码检查</h1><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/golangci/golangci-lint/cmd/golangci-lint</span><br></pre></td></tr></table></figure><h2 id="2-2-配置"><a href="#2-2-配置" class="headerlink" title="2.2 配置"></a>2.2 配置</h2><p><img src="https://img-blog.csdnimg.cn/20190903103906486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt><br><img src="https://img-blog.csdnimg.cn/2019090310392262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h1 id="3-Proto格式化"><a href="#3-Proto格式化" class="headerlink" title="3. Proto格式化"></a>3. Proto格式化</h1><h2 id="3-1-下载clang-format"><a href="#3-1-下载clang-format" class="headerlink" title="3.1 下载clang-format"></a>3.1 下载clang-format</h2><p>在这个网址进行下载：<a href="http://releases.llvm.org/download.html" target="_blank" rel="noopener">http://releases.llvm.org/download.html</a></p><p>文件有点大，一百多M，下载之后安装即可</p><h2 id="3-2-配置clang-format"><a href="#3-2-配置clang-format" class="headerlink" title="3.2 配置clang-format"></a>3.2 配置clang-format</h2><p><img src="https://img-blog.csdnimg.cn/20190705101056142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><p>Arguments上面输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-style=&quot;&#123;BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 0, AlignConsecutiveAssignments: true, AlignConsecutiveAssignments: true&#125;&quot;</span><br><span class="line">-i</span><br><span class="line">$FilePath$</span><br></pre></td></tr></table></figure><p>注意：如果你是Windows，clang-format要选择<code>clang-format.exe</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: GoLand文件格式化配置&lt;br&gt;date: 2019-05-28 22:10:31&lt;br&gt;tags: [proto,goformat,gofmt,clang-format,golang-ci]&lt;br&gt;categories: go&lt;/p&gt;
&lt;p&gt;@[toc]&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/eclipse%E9%83%A8%E7%BD%B2guns/"/>
    <id>http://pibigstar.com/2019/09/29/eclipse部署guns/</id>
    <published>2019-09-29T14:56:41.272Z</published>
    <updated>2019-09-29T14:56:41.272Z</updated>
    
    <content type="html"><![CDATA[<p>title: eclipse部署guns<br>date: 2019-09-10 22:10:31<br>tags: []<br>categories: guns</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: eclipse部署guns&lt;br&gt;date: 2019-09-10 22:10:31&lt;br&gt;tags: []&lt;br&gt;categories: guns&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/%E4%BD%BF%E7%94%A8Maven+Hibernate%E8%AE%BF%E9%97%AE%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://pibigstar.com/2019/09/29/使用Maven+Hibernate访问数据库/</id>
    <published>2019-09-29T14:56:41.264Z</published>
    <updated>2019-09-29T14:56:41.264Z</updated>
    
    <content type="html"><![CDATA[<p>title: 使用Maven+Hibernate访问数据库<br>date: 2019-05-13 22:10:31<br>tags: [hibernate.maven,java]<br>categories: Java,框架学习使用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: 使用Maven+Hibernate访问数据库&lt;br&gt;date: 2019-05-13 22:10:31&lt;br&gt;tags: [hibernate.maven,java]&lt;br&gt;categories: Java,框架学习使用&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/GoLang%20module%E6%93%8D%E4%BD%9C/"/>
    <id>http://pibigstar.com/2019/09/29/GoLang module操作/</id>
    <published>2019-09-29T14:56:41.264Z</published>
    <updated>2019-09-29T14:56:41.264Z</updated>
    
    <content type="html"><![CDATA[<p>title: GoLang module操作<br>date: 2018-08-30 22:10:31<br>tags: [go,module,mod]<br>categories: go</p><p>@[toc]</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p><strong>Windows10</strong><br><strong>GO：1.13</strong></p><h1 id="前期设置"><a href="#前期设置" class="headerlink" title="前期设置"></a>前期设置</h1><h2 id="不同版本开启GO-module"><a href="#不同版本开启GO-module" class="headerlink" title="不同版本开启GO module"></a>不同版本开启GO module</h2><h3 id="1-11和1-12版本"><a href="#1-11和1-12版本" class="headerlink" title="1.11和1.12版本"></a>1.11和1.12版本</h3><p>将下面两个设置添加到系统的环境变量中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GO111MODULE=on</span><br><span class="line">GOPROXY=https://goproxy.io</span><br></pre></td></tr></table></figure><h3 id="1-13版本之后"><a href="#1-13版本之后" class="headerlink" title="1.13版本之后"></a>1.13版本之后</h3><blockquote><p>需要注意的是这种方式并不会覆盖之前的配置，有点坑，你需要先把之前的给删掉再设置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go env -w GO111MODULE=on</span><br><span class="line">go env -w GOPROXY=https://goproxy.io,direct</span><br></pre></td></tr></table></figure><h2 id="goLand开启-go-mod"><a href="#goLand开启-go-mod" class="headerlink" title="goLand开启 go mod"></a>goLand开启 go mod</h2><p><img src="https://img-blog.csdnimg.cn/20190929113735835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h1 id="go-get使用"><a href="#go-get使用" class="headerlink" title="go get使用"></a>go get使用</h1><blockquote><p>使用go module之后，go get 拉取依赖的方式就发生了变化</p></blockquote><ul><li><p>拉取最新的版本(优先择取 tag)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get golang.org/x/text@latest</span><br></pre></td></tr></table></figure></li><li><p>拉取 master 分支的最新 commit</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get golang.org/x/text@master</span><br></pre></td></tr></table></figure></li><li><p>拉取 tag 为 v0.3.2 的 commit</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get golang.org/x/text@v0<span class="number">.3</span><span class="number">.2</span></span><br></pre></td></tr></table></figure></li><li><p>拉取 hash 为 342b231 的 commit，最终会被转换为 v0.3.2：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get golang.org/x/text@<span class="number">342</span>b2e</span><br></pre></td></tr></table></figure></li><li><p>更新</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u</span><br></pre></td></tr></table></figure></li></ul><h1 id="其它基本操作"><a href="#其它基本操作" class="headerlink" title="其它基本操作"></a>其它基本操作</h1><ol><li><p>初始化一个moudle，模块名为你项目名</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod init 模块名</span><br></pre></td></tr></table></figure></li><li><p>下载modules到本地cache</p><blockquote><p>目前所有模块版本数据均缓存在 <code>$GOPATH/pkg/mod</code>和 ​<code>$GOPATH/pkg/sum</code> 下</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod download</span><br></pre></td></tr></table></figure></li><li><p>编辑go.mod文件<br>选项有<code>-json</code>、<code>-require</code>和<code>-exclude</code>，可以使用帮助go help mod edit</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod edit</span><br></pre></td></tr></table></figure></li><li><p>以文本模式打印模块需求图</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod graph</span><br></pre></td></tr></table></figure></li><li><p>删除错误或者不使用的modules</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod tidy</span><br></pre></td></tr></table></figure></li><li><p>生成vendor目录</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod vendor</span><br></pre></td></tr></table></figure></li><li><p>验证依赖是否正确</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod verify</span><br></pre></td></tr></table></figure></li><li><p>查找依赖</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod why</span><br></pre></td></tr></table></figure></li></ol><h1 id="高级操作"><a href="#高级操作" class="headerlink" title="高级操作"></a>高级操作</h1><ol><li>更新到最新版本<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get github.com/gogf/gf@version</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>如果没有指明 version 的情况下，则默认先下载打了 tag 的 release 版本，比如 v0.4.5 或者 v1.2.3；如果没有 release 版本，则下载最新的 pre release 版本，比如 v0.0.1-pre1。如果还没有则下载最新的 commit</p><ol start="2"><li>更新到最新的修订版（只改bug的版本）</li></ol></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u=patch github.com/gogf/gf</span><br></pre></td></tr></table></figure><ol start="3"><li><p>替代只能翻墙下载的库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go mod edit -replace=golang.org/x/crypto@v0.0.0=github.com/golang/crypto@latest</span><br><span class="line">go mod edit -replace=golang.org/x/sys@v0.0.0=github.com/golang/sys@latest</span><br></pre></td></tr></table></figure></li><li><p>清理moudle 缓存</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> clean -modcache</span><br></pre></td></tr></table></figure></li><li><p>查看可下载版本</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> list -m -versions github.com/gogf/gf</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: GoLang module操作&lt;br&gt;date: 2018-08-30 22:10:31&lt;br&gt;tags: [go,module,mod]&lt;br&gt;categories: go&lt;/p&gt;
&lt;p&gt;@[toc]&lt;/p&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E8%AF%A6%E7%BB%86%E8%AF%B4%E6%98%8E/"/>
    <id>http://pibigstar.com/2019/09/29/git常用操作详细说明/</id>
    <published>2019-09-29T14:56:41.244Z</published>
    <updated>2019-09-29T14:56:41.244Z</updated>
    
    <content type="html"><![CDATA[<p>title: git常用操作详细说明<br>date: 2018-11-27 22:10:31<br>tags: [git,回滚,git删除,暂存区]<br>categories: 工具使用,git</p><p>初级的就不说了，下面记录一些常用且稍微高级点的操作<br>@[TOC]</p><h2 id="git的管理流程"><a href="#git的管理流程" class="headerlink" title="git的管理流程"></a>git的管理流程</h2><p><strong>工作区 ——&gt; git add ——&gt; Index[索引][暂存区] ——&gt; git commit ——&gt; HEAD[快照]</strong></p><blockquote><p>当执行<code>git add</code> 后其实就是将更改的文件放入到暂存区中，当执行<code>git commit</code>时就是将暂存区的内容提交到当前分支</p></blockquote><ul><li>HEAD快照是保存你最后一次commit的内容</li><li>git push 是将快照区的内容push 上去</li></ul><h2 id="git常用操作"><a href="#git常用操作" class="headerlink" title="git常用操作"></a>git常用操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图形化显示log日志</span></span><br><span class="line">gitk  --all</span><br><span class="line"><span class="comment"># 简洁的log 日志</span></span><br><span class="line">git <span class="built_in">log</span> --oneline </span><br><span class="line"><span class="comment"># 查看所有分支</span></span><br><span class="line">git <span class="built_in">log</span> --all </span><br><span class="line"><span class="comment"># 显示最近4个提交</span></span><br><span class="line">git <span class="built_in">log</span> -n4 </span><br><span class="line"><span class="comment">#  显示变更信息</span></span><br><span class="line">git <span class="built_in">log</span> --graph</span><br><span class="line"><span class="comment"># 查看暂存区与HEAD中的差别</span></span><br><span class="line">git diff --cached </span><br><span class="line"><span class="comment"># 配置git log</span></span><br><span class="line">git config --global alias.lg <span class="string">"log --graph --pretty=format:'%Cred%h%Creset - %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --date=relative"</span></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">git lg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看提交了多少行代码</span></span><br><span class="line">git <span class="built_in">log</span> --author=<span class="string">"<span class="variable">$(git config --get user.name)</span>"</span> --pretty=tformat: --numstat | gawk <span class="string">'&#123; add += $1 ; subs += $2 ; loc += $1 - $2 &#125; END &#123; printf "added lines: %s removed lines : %s total lines: %s\n",add,subs,loc &#125;'</span> -</span><br></pre></td></tr></table></figure><h2 id="1-关联"><a href="#1-关联" class="headerlink" title="1. 关联"></a>1. 关联</h2><ul><li><h3 id="1-1-关联仓库"><a href="#1-1-关联仓库" class="headerlink" title="1.1 关联仓库"></a>1.1 关联仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 仓库地址</span><br></pre></td></tr></table></figure></li></ul><p>你可以同时关联其他的仓库（也包括gitee和gitlab）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin-2 仓库地址</span><br></pre></td></tr></table></figure><p>这样你push的时候</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin-2 master</span><br></pre></td></tr></table></figure><h2 id="2-分支"><a href="#2-分支" class="headerlink" title="2. 分支"></a>2. 分支</h2><h4 id="2-1-只创建一个分支"><a href="#2-1-只创建一个分支" class="headerlink" title="2.1 只创建一个分支"></a>2.1 只创建一个分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch fix-1</span><br></pre></td></tr></table></figure><h4 id="2-2-创建分支并切换此分支"><a href="#2-2-创建分支并切换此分支" class="headerlink" title="2.2 创建分支并切换此分支"></a>2.2 创建分支并切换此分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b feat-1</span><br></pre></td></tr></table></figure><h4 id="2-3-切换分支"><a href="#2-3-切换分支" class="headerlink" title="2.3 切换分支"></a>2.3 切换分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure><h4 id="2-4-查看所有分支"><a href="#2-4-查看所有分支" class="headerlink" title="2.4 查看所有分支"></a>2.4 查看所有分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -v</span><br></pre></td></tr></table></figure><h4 id="2-5-删除分支"><a href="#2-5-删除分支" class="headerlink" title="2.5 删除分支"></a>2.5 删除分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d feat-1</span><br></pre></td></tr></table></figure><h4 id="2-6-删除除master以外的所有分支"><a href="#2-6-删除除master以外的所有分支" class="headerlink" title="2.6 删除除master以外的所有分支"></a>2.6 删除除master以外的所有分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch | grep -v <span class="string">"master"</span> | xargs git branch -D</span><br></pre></td></tr></table></figure><h2 id="3-临时暂存区"><a href="#3-临时暂存区" class="headerlink" title="3. 临时暂存区"></a>3. 临时暂存区</h2><h4 id="3-1-将更改放到临时暂存区"><a href="#3-1-将更改放到临时暂存区" class="headerlink" title="3.1 将更改放到临时暂存区"></a>3.1 将更改放到临时暂存区</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><h4 id="3-2-将更改从临时暂存区取出"><a href="#3-2-将更改从临时暂存区取出" class="headerlink" title="3.2 将更改从临时暂存区取出"></a>3.2 将更改从临时暂存区取出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h4 id="3-3-查看临时暂存区内容"><a href="#3-3-查看临时暂存区内容" class="headerlink" title="3.3 查看临时暂存区内容"></a>3.3 查看临时暂存区内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure><h4 id="3-4-恢复指定临时暂存区"><a href="#3-4-恢复指定临时暂存区" class="headerlink" title="3.4 恢复指定临时暂存区"></a>3.4 恢复指定临时暂存区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply stash@&#123;id&#125;</span><br></pre></td></tr></table></figure><h2 id="4-合并冲突"><a href="#4-合并冲突" class="headerlink" title="4. 合并冲突"></a>4. 合并冲突</h2><p>1.更新代码 <code>git fetch</code><br>2.合并分支 <code>git rebase origin/develop</code> //将develop分支与此分支合并<br>3.会进入合并分支，当有<strong>CONFLICT:Merge file.txt</strong>, 手动去修改此文件<br>4.修改之后添加冲突文件 <code>git add file.txt</code><br>5.继续合并 <code>git rebase --continue</code>, 如果有错误继续 执行 3 4 步骤<br>6.当分支名变成你的分支名则表示合并完成<br>7.查看当前状态 git status<br>8.如果状态都为已暂存，则可以执行 <code>git push origin 分支名</code> 进行提交</p><h4 id="push之前忘记git-pull"><a href="#push之前忘记git-pull" class="headerlink" title="push之前忘记git pull"></a>push之前忘记git pull</h4><p>出现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! [rejected]  master -&gt; master (fetch first)</span><br></pre></td></tr></table></figure><p>可以使用下面这个命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><blockquote><p>这个命令是先取消commit记录，并且把它们临时 保存为补丁(patch)(这些补丁放到”.git/rebase”目录中)，之后同步远程库到本地，最后合并补丁到本地库之中。 </p></blockquote><p>然后再直接进行push就可以了</p><h2 id="5-回滚"><a href="#5-回滚" class="headerlink" title="5. 回滚"></a>5. 回滚</h2><h4 id="5-1-撤销掉本地修改（还没被git-add）"><a href="#5-1-撤销掉本地修改（还没被git-add）" class="headerlink" title="5.1 撤销掉本地修改（还没被git add）"></a>5.1 撤销掉本地修改（还没被git add）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 撤销某具体文件</span></span><br><span class="line">git checkout fileName</span><br><span class="line"><span class="comment"># 撤销所有</span></span><br><span class="line">git checkout .</span><br></pre></td></tr></table></figure><h4 id="5-2-撤销上一次git-add的内容"><a href="#5-2-撤销上一次git-add的内容" class="headerlink" title="5.2 撤销上一次git add的内容"></a>5.2 撤销上一次<code>git add</code>的内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 撤销某个文件</span></span><br><span class="line">git reset HEAD fileName</span><br><span class="line"><span class="comment"># 撤销所有</span></span><br><span class="line">git reset HEAD .</span><br></pre></td></tr></table></figure><p>只撤销某个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD 文件路径/文件名</span><br></pre></td></tr></table></figure><h4 id="5-3-撤销上一次git-commit"><a href="#5-3-撤销上一次git-commit" class="headerlink" title="5.3 撤销上一次git commit"></a>5.3 撤销上一次<code>git commit</code></h4><ol><li><p>先查看日志，记录commit id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure></li><li><p>恢复到指定commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset commit_id</span><br><span class="line"><span class="comment"># 备用</span></span><br><span class="line">git reset --hard  commit_id</span><br></pre></td></tr></table></figure></li></ol><h4 id="5-4-修改上一次commit"><a href="#5-4-修改上一次commit" class="headerlink" title="5.4 修改上一次commit"></a>5.4 修改上一次commit</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><h4 id="5-5-撤销git-commit-和-git-add-以及-工作区更新的内容"><a href="#5-5-撤销git-commit-和-git-add-以及-工作区更新的内容" class="headerlink" title="5.5 撤销git commit 和 git add 以及 工作区更新的内容"></a>5.5 撤销git commit 和 git add 以及 工作区更新的内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD~</span><br></pre></td></tr></table></figure><h4 id="5-5-删除远程分支中某个文件"><a href="#5-5-删除远程分支中某个文件" class="headerlink" title="5.5 删除远程分支中某个文件"></a>5.5 删除远程分支中某个文件</h4><p>这个只是让此文件不受版本控制了，而本地是不会删除它的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git rm -r –-cached 文件路径/文件名</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"delete the file"</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h4 id="5-6-回滚到指定版本"><a href="#5-6-回滚到指定版本" class="headerlink" title="5.6 回滚到指定版本"></a>5.6 回滚到指定版本</h4><ol><li><p>查看日志拿到commitid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure></li><li><p>恢复到指定版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard commit_id</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-开源协作"><a href="#6-开源协作" class="headerlink" title="6.开源协作"></a>6.开源协作</h2><h4 id="6-1-fork别人代码"><a href="#6-1-fork别人代码" class="headerlink" title="6.1 fork别人代码"></a>6.1 fork别人代码</h4><p>此时你的仓库就会有一个此项目的副本</p><h4 id="6-2-克隆代码"><a href="#6-2-克隆代码" class="headerlink" title="6.2 克隆代码"></a>6.2 克隆代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> *****.git</span><br></pre></td></tr></table></figure><h4 id="6-3-添加别人远程仓库地址"><a href="#6-3-添加别人远程仓库地址" class="headerlink" title="6.3 添加别人远程仓库地址"></a>6.3 添加别人远程仓库地址</h4><p>为了可以随时更新代码，这里最好将别人仓库的地址也新增一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin2 *****.git</span><br></pre></td></tr></table></figure><p>拉取别人最新代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin2 master</span><br></pre></td></tr></table></figure><h4 id="6-4-提交"><a href="#6-4-提交" class="headerlink" title="6.4 提交"></a>6.4 提交</h4><p>添加新的功能之后开始提交代码，代码是提交到你的仓库中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h4 id="6-5-提交PR"><a href="#6-5-提交PR" class="headerlink" title="6.5 提交PR"></a>6.5 提交PR</h4><p>去你GitHub中此项目然后会有一个New pull Request</p><p><img src="https://img-blog.csdnimg.cn/20190405172555465.png" alt><br>点击它，然后向别人的项目提交PR</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: git常用操作详细说明&lt;br&gt;date: 2018-11-27 22:10:31&lt;br&gt;tags: [git,回滚,git删除,暂存区]&lt;br&gt;categories: 工具使用,git&lt;/p&gt;
&lt;p&gt;初级的就不说了，下面记录一些常用且稍微高级点的操作&lt;br&gt;@
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://pibigstar.com/2019/09/29/Fiddler%E9%AB%98%E7%BA%A7%E4%BD%BF%E7%94%A8%E2%80%94%E2%80%94%E8%A7%84%E5%88%99%E7%BC%96%E5%86%99/"/>
    <id>http://pibigstar.com/2019/09/29/Fiddler高级使用——规则编写/</id>
    <published>2019-09-29T14:56:41.244Z</published>
    <updated>2019-09-29T14:56:41.244Z</updated>
    
    <content type="html"><![CDATA[<p>title: Fiddler高级使用——规则编写<br>date: 2018-08-13 22:10:31<br>tags: [fiddler,抓包,规则过滤,脚本]<br>categories: 工具使用</p><h4 id="打开规则脚本编写"><a href="#打开规则脚本编写" class="headerlink" title="打开规则脚本编写"></a>打开规则脚本编写</h4><p><img src="https://img-blog.csdnimg.cn/20190127130212401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h4 id="在此函数下面编写"><a href="#在此函数下面编写" class="headerlink" title="在此函数下面编写"></a>在此函数下面编写</h4><p><img src="https://img-blog.csdnimg.cn/20190127130300398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2p1bm1veGk=,size_16,color_FFFFFF,t_70" alt></p><h1 id="1-替换json里面部分参数，然后返回给客户端"><a href="#1-替换json里面部分参数，然后返回给客户端" class="headerlink" title="1. 替换json里面部分参数，然后返回给客户端"></a>1. 替换json里面部分参数，然后返回给客户端</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (oSession.fullUrl.Contains(<span class="string">"http://www.baidu.com"</span>))</span><br><span class="line"> &#123;</span><br><span class="line"><span class="comment">// 获取Response Body、Request Body中JSON字符串，转换为可编辑的JSONObject变量</span></span><br><span class="line"><span class="keyword">var</span> responseStringOriginal =  oSession.GetResponseBodyAsString();</span><br><span class="line"><span class="keyword">var</span> responseJSON = Fiddler.WebFormats.JSON.JsonDecode(responseStringOriginal);</span><br><span class="line"><span class="keyword">var</span> requestStringOriginal=oSession.GetRequestBodyAsString();</span><br><span class="line"><span class="keyword">var</span> requestJSON = Fiddler.WebFormats.JSON.JsonDecode(requestStringOriginal);</span><br><span class="line"><span class="comment">//请求参数中，若type为1，对返回值做如下修改</span></span><br><span class="line">responseJSON.JSONObject[<span class="string">'付费'</span>] = <span class="string">"true"</span>;</span><br><span class="line"><span class="comment">// 重新设置Response Body</span></span><br><span class="line"><span class="keyword">var</span> responseStringDestinal = Fiddler.WebFormats.JSON.JsonEncode(responseJSON.JSONObject);</span><br><span class="line">oSession.utilSetResponseBody(responseStringDestinal);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="2-修改request的Body里面的部分参数"><a href="#2-修改request的Body里面的部分参数" class="headerlink" title="2. 修改request的Body里面的部分参数"></a>2. 修改request的Body里面的部分参数</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(oSession.uriContains(<span class="string">"http://www.baidu.com"</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 获取Request 中的body字符串</span></span><br><span class="line"><span class="keyword">var</span> strBody=oSession.GetRequestBodyAsString();</span><br><span class="line"><span class="comment">// 用正则表达式或者replace方法去修改string，将false改为true</span></span><br><span class="line">strBody=strBody.replace(<span class="string">"false"</span>,<span class="string">"true"</span>);</span><br><span class="line"><span class="comment">// 弹个对话框检查下修改后的body </span></span><br><span class="line">FiddlerObject.alert(strBody);</span><br><span class="line"><span class="comment">// 将修改后的body，重新写回Request中</span></span><br><span class="line">oSession.utilSetRequestBody(strBody);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-修改cookie"><a href="#3-修改cookie" class="headerlink" title="3. 修改cookie"></a>3. 修改cookie</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(oSession.HostnameIs(<span class="string">'www.baidu.com'</span>) &amp;&amp; oSession.uriContains(<span class="string">'pagewithCookie'</span>) &amp;&amp; oSession.oRequest.headers.Contains(<span class="string">"Cookie"</span>))</span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">var</span> sCookie = oSession.oRequest[<span class="string">"Cookie"</span>]; </span><br><span class="line"><span class="comment">//  用replace方法或者正则表达式的方法去操作cookie的string</span></span><br><span class="line">sCookie = sCookie.Replace(<span class="string">"付费=false"</span>, <span class="string">"付费=true"</span>); </span><br><span class="line">oSession.oRequest[<span class="string">"Cookie"</span>] = sCookie;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-查看是否访问了某个网站"><a href="#4-查看是否访问了某个网站" class="headerlink" title="4. 查看是否访问了某个网站"></a>4. 查看是否访问了某个网站</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(oSession.HostnameIs(<span class="string">"www.baidu.com"</span>)) </span><br><span class="line">&#123;</span><br><span class="line">oSession[<span class="string">"ui-color"</span>] = <span class="string">"red"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-自动保存某个接口的数据到本地"><a href="#5-自动保存某个接口的数据到本地" class="headerlink" title="5. 自动保存某个接口的数据到本地"></a>5. 自动保存某个接口的数据到本地</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (oSession.fullUrl.Contains(<span class="string">"www.baidu.com/playurl/v1/"</span>) )</span><br><span class="line">&#123;  </span><br><span class="line"><span class="comment">//消除保存的请求可能存在乱码的情况</span></span><br><span class="line">oSession.utilDecodeResponse();</span><br><span class="line"><span class="keyword">var</span> fso;</span><br><span class="line"><span class="keyword">var</span> file;</span><br><span class="line">fso = <span class="keyword">new</span> ActiveXObject(<span class="string">"Scripting.FileSystemObject"</span>);</span><br><span class="line"><span class="comment">//文件保存路径，可自定义</span></span><br><span class="line">file = fso.OpenTextFile(<span class="string">"D:\\Sessions.txt"</span>,<span class="number">8</span> ,<span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="comment">//file.writeLine("Response code: " + oSession.responseCode);</span></span><br><span class="line">file.writeLine(<span class="string">"Response body: "</span> + oSession.GetResponseBodyAsString());</span><br><span class="line">file.writeLine(<span class="string">"\n"</span>);</span><br><span class="line">file.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: Fiddler高级使用——规则编写&lt;br&gt;date: 2018-08-13 22:10:31&lt;br&gt;tags: [fiddler,抓包,规则过滤,脚本]&lt;br&gt;categories: 工具使用&lt;/p&gt;
&lt;h4 id=&quot;打开规则脚本编写&quot;&gt;&lt;a href=&quot;#打
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
